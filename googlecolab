%pwd  

%cd '/content'

!wget --no-check-certificate 'https://drive.google.com/uc?export=download&id=1XdwGEqKXeKH1NRhZXxCZo5T8mncwYHCC' -O ./Bet-n-dcm2nii.zip
!unzip -q ./Bet-n-dcm2nii.zip
!rm -rf images

!wget --no-check-certificate 'https://drive.google.com/uc?export=download&id=1MqEWwsrYvG1Dqdez1F2kRbfcLGTagFJl' -O ./LGGtestpat.zip
!unzip -q ./LGGtestpat
!rm -rf _MACOSX
!rm -rf LGGtestpat/.DS_Store
!rm -rf LGGtestpat/S2/.DS_Store
!rm -rf LGGtestpat/S3/.DS_Store

!wget --no-check-certificate 'https://drive.google.com/uc?export=download&id=1uBQdQIYcA_ACqycw8ofDzD-1G9YwZaRw' -O ./icbm152t2.zip
!unzip -q ./icbm152t2.zip

NIFTI_PATH = './LGGtestpat'

import os, fnmatch

os.environ['FSLOUTPUTTYPE'] = 'NIFTI_GZ'

for subj in os.listdir(NIFTI_PATH):
    subj_path = os.path.join(NIFTI_PATH, subj)
    print ("Working on " + subj_path)
    series = fnmatch.filter(os.listdir(subj_path), '*.nii.gz')
    for ser in ['T2']:
        nii_file = os.path.join (subj_path, ser)
# First, perform N4 bias correction. Not required, but may improve results. Also must track new names
        new_file = os.path.join (subj_path, 'N4-' + ser)
        cmd = "./N4BiasFieldCorrection -i %s.nii.gz -o %s.nii.gz" % (nii_file, new_file)
        os.system(cmd)
        print (cmd)
        
        
# Next, Register the images to the avg 152 t2 image from MNI
for subj in os.listdir(NIFTI_PATH):
    subj_path = os.path.join(NIFTI_PATH, subj)
    print ("Working on " + subj_path)
    series = fnmatch.filter(os.listdir(subj_path), 'N4*')
    for ser in ['T2']:   
        MNI_file = './icbm_avg_152_t2_tal_lin.nii'
        T2_file =  os.path.join (subj_path, 'N4-T2.nii.gz')
        new_file = os.path.join (subj_path, 'Reg-N4-T2.nii.gz')
        cmd = "./flirt -in %s -ref %s  -out %s" % (T2_file, MNI_file, new_file)
        os.system(cmd)
        print (cmd)
